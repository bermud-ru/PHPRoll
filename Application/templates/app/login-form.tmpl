<div id="{{TemplateContainerID}}">
<style type="text/css">
    body {
        /* Путь до изображения */
        /* background-image: url(); */
        /* Фоновое изображение всегда отцентрировано по вертикали и горизонтали */
        background-position: center center;
        /* Фоновое изображение не повторяется */
        background-repeat: no-repeat;
        /* Фоновое изображение зафиксировано в окне просмотра, поэтому оно не смещается, когда высота контента больше высоты изображения */
        background-attachment: fixed;
        /* Вот что позволяет фоновому изображению подстраиваться под размер контейнера */
        background-size: cover;
        /* Устанавливает фоновый цвет, который будет отображаться, пока загружается фоновое изображение */
        background-color: #464646;
    }

    .container {
    // padding-top:17%;
        width:100%;
        height:100%;
        text-align:center;
        vertical-align:middle;
    }
    /* Адапитивность
    @media screen and (max-width: XXXpx) { }
    @media screen and (min-width: XXXpx) { }
    @media screen and (min-width: XXXpx) and (max-width: YYYpx) { }
    @media screen and (max-device-width: XXXpx) { }

    @media screen and (min-width: 480px) and (max-width: 768px) {
    .container {
        padding-top:10%;
        width:100%;
        height:100%;
        text-align:center;
    }*/

    .loginForm {
        width: 330px;
        padding: 15px;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-left: -165px;
        margin-top: -10em;
        text-align: left;
    }
    .loginForm .loginForm-heading,
    .loginForm .checkbox {
        color: #ccc;
        margin-bottom: 10px;
    }
    .loginForm .checkbox {
        font-weight: normal;
    }
    .loginForm .form-control {
        position: relative;
        height: auto;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        padding: 10px;
        font-size: 16px;
    }
    .loginForm .form-control:focus {
        z-index: 2;
    }
    .loginForm input[type="email"] {
        margin-bottom: -1px;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
    }
    .loginForm input[type="password"] {
        margin-bottom: 10px;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }
    .error {
        color: #EC8686;
    }
</style>

<div class="container">
    <div class="loginForm">
        <form method="post" role="form" name="loginForm01" id="loginForm01" action="/auth">
            <h2 class="loginForm-heading">Авторизация</h2>
            <div class="form-group">
                <!-- label for="email">Пользователь</label //-->
                <input type="text" name="email" required placeholder="Email пользователя" class="form-control" value="" tabindex="1" />
                <!-- /div //-->
                <!-- div class="form-group" //-->
                <!-- label for="passwd">Пароль</label //-->
                <input type="password" name="passwd" required placeholder="Введите пароль" class="form-control" value="" tabindex="2" />
            </div>
            <div class="form-group">
                <label class="checkbox">
                    <input type="checkbox" value="remember-me" tabindex="3" /> Запомнить меня!
                </label>
                <button class="btn btn-lg btn-primary btn-block" id="send_loginForm01" tabindex="4" ><i class="glyphicon glyphicon-ok"></i> Вход</button>
            </div>
        </form>
    </div>
</div>
    <script type="text/javascript">

        //document.title = document.title.replace(/\[(.)*\]/, '[Форма авторизации]');
        document.application.title = 'Форма авторизации';

        /**
         * Плагин "Форма авторизация пользователя с валидацией"
         */
        (function ( $, window, undefined ) {
            'use strict';

            var pluginName = 'feLogin',
                    document = window.document,
                    defaults = {}
                    ;

            $.validator.addMethod('validateEmail', function(value, element, options){
                var targetEl = $('input[name="'+options.data+'"]'),
                        email = /^[-a-z0-9!#$%&'*+/=?^_`{|}~]+(?:\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                        result = email.test(value);
                (result) ? targetEl.addClass('error') : targetEl.removeClass('error');
                return result;
            }, 'Пожалуйста, введите корректный email');

            var classFeLogin = function(container, options)
            {
                this.container = $(container);
                // this.translucent = this.container.find('.translucent');
                this.options = $.extend( {}, defaults, options ) ;
                this._defaults = defaults;
                this._name = pluginName;
                this.submit = this.container.find(this.options.submit);

                this.init();

                return this;
            };

            classFeLogin.prototype = {
                set ajaxProcess (params){
                    /* if (this.submit && (params)) {
                     this.translucent .addClass('active');
                     } else {
                     this.translucent.removeClass('active');
                     }; */
                    this._ajaxProcess = params;
                },
                get ajaxProcess (){
                    return this._ajaxProcess;
                },
                init : function()
                {
                    var self = this;

                    self._ajaxProcess = false;
                    self.validator = self.container.validate({
                        // Specify the validation rules
                        rules: {
                            email: {
                                required: true,
                                validateEmail: { data: 'email' }
                            },
                            passwd: {
                                required: true,
                            }
                        },
                        // Specify the validation error messages
                        messages: {
                            email:{
                                required: 'Пожалуйста, введите корректный email'
                            },
                            passwd:{
                                required: 'Пожалуйста, введите пароль',
                            },
                        }
                    });
                    self.initBinds();
                },
                /**
                 * Навешивание событий
                 */
                initBinds : function()
                {
                    var self = this;

                    self.submit.on('click', function(e){
                        e.preventDefault();
                        if (!self.ajaxProcess) {
                            if (!self.validator.checkForm()){
                                self.validator.showErrors();
                            } else {
                                self.send(self.container);
                            }
                        } else {
                            if ($.cookie(pluginName)) {
                                self.info('Ваша авторизация прошла успешно!');
                            }
                        }
                    });
                },
                /**
                 * Отправляем данные на сервер
                 */
                send: function (form) {
                    var self = this;
                    self.ajaxProcess = true;
                    $.ajax({
                        // Uncomment the following to send cross-domain cookies:
                        //xhrFields: {withCredentials: true},
                        url: form.attr('action'),
                        type: form.attr('method'),
                        dataType: 'json',
                        data: form.serialize(),
                        headers:{'X-Form': 'login'}
                    }).fail(function () {
                        self.info('Произошла ошибка передачи данных!');
                        self.ajaxProcess = false;
                    }).done(function (data) {
                        if (data.result === 'ok') {
                            var app = document.application;
                            app.user = data.dataset;
                            delete app.storage['templates-auth-login-form'];
                            app.view.destroy();
                            app.run();
                        } else {
                            self.info(data.message);
                        }
                        self.ajaxProcess = false;
                    });
                },
                info: function(msg) {
                    alert(msg);
                }
            };

            $.fn[pluginName] = function ( options ) {
                return this.each(function () {
                    if (!$.data(this, 'plugin_' + pluginName)) {
                        $.data(this, 'plugin_' + pluginName, new classFeLogin( this, options ));
                    }
                });
            }
        }(jQuery, window));

        $('form[name=loginForm01]').feLogin({submit:'#send_loginForm01'});
    </script>
</div>